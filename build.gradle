import java.util.regex.Pattern

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    sourceCompatibility = 1.11
    targetCompatibility = 1.11
    ext.author = "Sheryv"
    ext.longName = "ShvTools root"
    ext.className = ""
    ext.site = 'https://github.com/Sheryv/ShvTools'
    ext.kotlin_version = '1.3.72'
    ext.shortVersion = "0.1"

    group = 'com.sheryv'

    task fatJar(type: Jar) {
        afterEvaluate { p ->
            manifest {
                attributes 'Implementation-Title': p.longName,
                        'Implementation-Version': p.version,
                        'Implementation-Vendor': p.author + ', ' + p.site,
                        'Main-Class': p.className
            }
            baseName = project.name + '-all'
            archiveName = "${baseName}-${p.ext.shortVersion}.${extension}"
            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
            with jar
        }
    }


    ext.getVersionName = { module, folder = '\\src\\main\\resources\\' ->
//    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : -1
//    println "VersionCode is set to $code"
//    return code

        def suffix = "-version.txt"
        def nm = projectDir.absolutePath + folder + module + suffix
        def f = new File((String) nm);
        if (!f.exists()) {
            f = new File((String) nm)
            f.write("0.1.0")
        }
        def patternVersionNumber = Pattern.compile("(\\d+)\\.(\\d+)\\.(\\d+)")
        def version = f.getText()
        def matcherVersionNumber = patternVersionNumber.matcher(version)
        matcherVersionNumber.find()
        def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
        def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
        def pointVersion = Integer.parseInt(matcherVersionNumber.group(3))
        def begin = majorVersion + "." + minorVersion
        project.ext.shortVersion = begin
        def newVer = begin + "." + (pointVersion + 1)
        println("Version inc: " + version + " > " + newVer)

        f.write(newVer)
        return newVer
    }

    publishing {
        publications {
            maven(MavenPublication) {
                version = project.ext.shortVersion

                from components.java
            }
        }
    }

}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        //    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.2'
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.2'
        compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    }

}


//compileKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}
//compileTestKotlin {
//    kotlinOptions.jvmTarget = "1.8"
//}